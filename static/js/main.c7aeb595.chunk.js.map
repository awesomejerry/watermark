{"version":3,"sources":["logo.png","filters/filter-2.js","Watermark.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","COLOR_MAPPING","white","black","run","canvas","img","name","date","style","logo","ctx","getContext","hRatio","width","vRatio","height","ratio","Math","max","centerShift_x","centerShift_y","clearRect","drawImage","size","color","lineWidth","strokeStyle","beginPath","moveTo","hPadding","lineTo","stroke","closePath","drawFrame","font1","font2","textAlign","fillStyle","font","fillText","vPadding","text1Y","drawUpperText","nameString","dateString","moment","format","textWidth1","measureText","textWidth2","rectWidth","fillRect","fontSize2","text2Y","drawLowerText","Promise","resolve","reject","toBlob","blob","URL","createObjectURL","previewLoad","a","canvasRef","rawRef","setPreview","logoRef","current","dataUrl","Watermark","useRef","previewRef","uploadRef","useState","raw","setRaw","preview","setName","setDate","setStyle","processPreview","useCallback","useEffect","className","TextField","id","label","fullWidth","margin","value","onChange","e","target","utils","DateFnsUtils","disableToolbar","variant","KeyboardButtonProps","minDate","Date","now","FormControl","component","FormLabel","RadioGroup","aria-label","row","FormControlLabel","control","Radio","Button","onClick","click","ref","type","preventDefault","reader","FileReader","file","files","onloadend","result","readAsDataURL","imageUpload","src","alt","onLoad","require","href","replace","download","App","AppBar","position","Toolbar","Typography","Container","maxWidth","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c7aeb595.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.8c4f0b91.png\";","import moment from 'moment';\n\nconst size = 1080;\n// const logoRatio = 0.2;\nconst hPadding = 40;\nconst vPadding = 40;\nconst TEXT_SPARE_SPACE = 120;\n\nconst COLOR_MAPPING = {\n  white: '#fafafa',\n  black: 'rgb(59, 74, 96)'\n};\n\nconst drawFrame = ({ ctx, size, style }) => {\n  const color = COLOR_MAPPING[style];\n  ctx.lineWidth = 3;\n  ctx.strokeStyle = color;\n\n  ctx.beginPath();\n  ctx.moveTo(hPadding + TEXT_SPARE_SPACE, vPadding);\n  ctx.lineTo(size - hPadding, vPadding);\n  ctx.stroke();\n  ctx.closePath();\n\n  ctx.beginPath();\n  ctx.moveTo(size - vPadding, hPadding);\n  ctx.lineTo(size - vPadding, size - hPadding);\n  ctx.stroke();\n  ctx.closePath();\n\n  ctx.beginPath();\n  ctx.moveTo(size - hPadding, size - vPadding);\n  ctx.lineTo(hPadding, size - vPadding);\n  ctx.stroke();\n  ctx.closePath();\n\n  ctx.beginPath();\n  ctx.moveTo(vPadding, size - hPadding);\n  ctx.lineTo(vPadding, hPadding + TEXT_SPARE_SPACE / 2);\n  ctx.stroke();\n  ctx.closePath();\n};\n\nconst drawUpperText = ({ ctx, style }) => {\n  const color = COLOR_MAPPING[style];\n\n  const fontSize1 = 21;\n  const fontSize2 = 16;\n  const font1 = `normal 700 ${fontSize1}pt 'Montserrat', 'Noto Sans TC', 'Noto Sans', sans-serif`;\n  const font2 = `normal 700 ${fontSize2}pt 'Montserrat', 'Noto Sans TC', 'Noto Sans', sans-serif`;\n  const text1X = hPadding - 2;\n  const text1Y = vPadding + fontSize1 * 0.75 + 1;\n  const text2X = text1X;\n  const text2Y = text1Y + fontSize1 + 5;\n\n  ctx.textAlign = 'left';\n  ctx.fillStyle = color;\n\n  ctx.font = font1;\n  ctx.fillText('NODE', text1X, text1Y);\n\n  ctx.font = font2;\n  ctx.fillText('GATHERING', text2X, text2Y);\n};\n\nconst drawLowerText = ({ ctx, name, date }) => {\n  const fontSize1 = 21;\n  const fontSize2 = 37;\n  const font1 = `normal 400 ${fontSize1}pt Montserrat, 'Noto Sans TC', 'Noto Sans', sans-serif`;\n  const font2 = `normal 400 ${fontSize2}pt Montserrat, 'Noto Sans TC', 'Noto Sans', sans-serif`;\n\n  const nameString = `- ${name} -`;\n  const dateString = moment(date).format('MM/DD');\n  ctx.font = font1;\n  const textWidth1 = ctx.measureText(nameString).width;\n  ctx.font = font2;\n  const textWidth2 = ctx.measureText(dateString).width;\n\n  const text2X = size - hPadding - 10;\n  const text1X = text2X;\n  const text2Y = size - vPadding - 20;\n  const text1Y = text2Y - fontSize2 - 20;\n\n  ctx.fillStyle = 'rgba(0, 0, 0, 0.5)';\n  const rectWidth = Math.max(textWidth1, textWidth2);\n  ctx.fillRect(\n    text1X - rectWidth - 12,\n    text1Y - fontSize1 - 18,\n    rectWidth + 20,\n    fontSize2 * 2 + 40\n  );\n\n  ctx.textAlign = 'right';\n  ctx.fillStyle = '#fafafa';\n\n  ctx.font = font1;\n  ctx.fillText(nameString, text1X, text1Y);\n\n  ctx.font = font2;\n  ctx.fillText(dateString, text2X, text2Y);\n};\n\nexport const run = ({ canvas, img, name, date, logo, style }) => {\n  const ctx = canvas.getContext('2d');\n  const hRatio = canvas.width / img.width;\n  const vRatio = canvas.height / img.height;\n  const ratio = Math.max(hRatio, vRatio);\n  const centerShift_x = (canvas.width - img.width * ratio) / 2;\n  const centerShift_y = (canvas.height - img.height * ratio) / 2;\n\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n  ctx.drawImage(\n    img,\n    0,\n    0,\n    img.width,\n    img.height,\n    centerShift_x,\n    centerShift_y,\n    img.width * ratio,\n    img.height * ratio\n  );\n\n  // ctx.drawImage(\n  //   logo,\n  //   hPadding - 20,\n  //   vPadding + 20,\n  //   size * logoRatio,\n  //   size * logoRatio\n  // );\n\n  drawFrame({ ctx, size, style });\n\n  drawUpperText({ ctx, style });\n\n  drawLowerText({ ctx, name, date, style });\n\n  return new Promise((resolve, reject) => {\n    canvas.toBlob(function(blob) {\n      resolve(URL.createObjectURL(blob));\n    });\n  });\n};\n","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport './Watermark.css';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from '@material-ui/pickers';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { run } from './filters/filter-2';\n\nconst size = 1080;\n\nconst imageUpload = (e, { setRaw, rawRef }) => {\n  e.preventDefault();\n\n  let reader = new FileReader();\n  let file = e.target.files[0];\n\n  setRaw('');\n  reader.onloadend = () => {\n    setRaw(reader.result);\n  };\n\n  reader.readAsDataURL(file);\n};\n\nconst previewLoad = async ({\n  canvasRef,\n  rawRef,\n  setPreview,\n  name,\n  date,\n  logoRef,\n  style\n}) => {\n  const canvas = canvasRef.current;\n  const img = rawRef.current;\n  const logo = logoRef.current;\n\n  const dataUrl = await run({\n    canvas,\n    img,\n    name,\n    date,\n    logo,\n    style\n  });\n\n  setPreview(dataUrl);\n};\n\nconst Watermark = () => {\n  const canvasRef = useRef(null);\n  const rawRef = useRef(null);\n  const previewRef = useRef(null);\n  const uploadRef = useRef(null);\n  const logoRef = useRef(null);\n  const [raw, setRaw] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const [name, setName] = useState('');\n  const [date, setDate] = useState(null);\n  const [style, setStyle] = useState('white');\n\n  const processPreview = useCallback(() => {\n    previewLoad({\n      canvasRef,\n      rawRef,\n      setPreview,\n      name,\n      date,\n      logoRef,\n      style\n    });\n  }, [style, date, name]);\n\n  useEffect(() => {\n    if (raw) {\n      processPreview();\n    }\n  }, [raw, processPreview]);\n\n  return (\n    <div className=\"Watermark\">\n      <TextField\n        id=\"standard-name\"\n        label=\"Gathering Name\"\n        fullWidth\n        margin=\"normal\"\n        value={name}\n        onChange={e => setName(e.target.value)}\n      />\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <KeyboardDatePicker\n          disableToolbar\n          variant=\"inline\"\n          format=\"MM/dd\"\n          margin=\"normal\"\n          label=\"Gathering Date\"\n          fullWidth\n          KeyboardButtonProps={{\n            'aria-label': 'change date'\n          }}\n          minDate={Date.now()}\n          value={date}\n          onChange={date => setDate(date)}\n        />\n      </MuiPickersUtilsProvider>\n      <FormControl component=\"fieldset\" fullWidth margin=\"normal\">\n        <FormLabel component=\"legend\">Style</FormLabel>\n        <RadioGroup\n          aria-label=\"gender\"\n          name=\"gender1\"\n          value={style}\n          onChange={e => setStyle(e.target.value)}\n          row\n        >\n          <FormControlLabel value=\"white\" control={<Radio />} label=\"White\" />\n          <FormControlLabel value=\"black\" control={<Radio />} label=\"Black\" />\n        </RadioGroup>\n      </FormControl>\n      <div className=\"button-margin\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            uploadRef.current.value = '';\n            uploadRef.current.click();\n          }}\n        >\n          Choose Photo\n        </Button>\n      </div>\n      <input\n        id=\"upload\"\n        ref={uploadRef}\n        type=\"file\"\n        onChange={e => imageUpload(e, { setRaw, rawRef })}\n      />\n      <img src={raw} ref={rawRef} alt=\"raw\" onLoad={() => processPreview()} />\n      <img src={require('./logo.png')} ref={logoRef} alt=\"logo\" />\n      <canvas ref={canvasRef} width={size} height={size} />\n      {preview && <img src={preview} ref={previewRef} alt=\"download\" />}\n      {preview && (\n        <div className=\"button-margin\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            href={preview.replace('image/png', 'image/octet-stream')}\n            download={'cover.jpg'}\n          >\n            Download\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Watermark;\n","import React from 'react';\nimport './App.css';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Watermark from './Watermark';\n\nfunction App() {\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\">Node Gathering Cover</Typography>\n        </Toolbar>\n      </AppBar>\n      <Container maxWidth=\"sm\">\n        <Watermark />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}