{"version":3,"sources":["logo.png","filters/filter-2.js","Watermark.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","run","canvas","img","name","date","ctx","logo","getContext","hRatio","width","vRatio","height","ratio","Math","max","centerShift_x","centerShift_y","clearRect","drawImage","size","lineWidth","strokeStyle","beginPath","moveTo","lineTo","stroke","closePath","drawFrame","font1","font2","font","textWidth1","measureText","fillStyle","fillRect","text1X","text1Y","fontSize1","textAlign","fillText","hPadding","vPadding","drawUpperText","nameString","dateString","moment","format","textWidth2","rectWidth","fontSize2","text2Y","drawLowerText","toDataURL","Watermark","canvasRef","useRef","rawRef","previewRef","uploadRef","logoRef","useState","raw","setRaw","preview","setPreview","setName","setDate","className","TextField","id","label","margin","value","onChange","e","target","utils","DateFnsUtils","disableToolbar","variant","KeyboardButtonProps","minDate","Date","now","Button","color","onClick","current","click","ref","type","preventDefault","reader","FileReader","file","files","onloadend","result","readAsDataURL","imageUpload","src","alt","onLoad","previewLoad","require","href","replace","download","App","AppBar","position","Toolbar","Typography","Container","maxWidth","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2b66ae2c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.8c4f0b91.png\";","import moment from 'moment';\n\nconst size = 1080;\n// const logoRatio = 0.2;\nconst hPadding = 40;\nconst vPadding = 40;\n\nconst drawFrame = ({ ctx, size }) => {\n  ctx.lineWidth = 3;\n  ctx.strokeStyle = '#fafafa';\n\n  ctx.beginPath();\n  ctx.moveTo(hPadding, vPadding);\n  ctx.lineTo(size - hPadding, vPadding);\n  ctx.stroke();\n  ctx.closePath();\n\n  ctx.beginPath();\n  ctx.moveTo(size - vPadding, hPadding);\n  ctx.lineTo(size - vPadding, size - hPadding);\n  ctx.stroke();\n  ctx.closePath();\n\n  ctx.beginPath();\n  ctx.moveTo(size - hPadding, size - vPadding);\n  ctx.lineTo(hPadding, size - vPadding);\n  ctx.stroke();\n  ctx.closePath();\n\n  ctx.beginPath();\n  ctx.moveTo(vPadding, size - hPadding);\n  ctx.lineTo(vPadding, hPadding);\n  ctx.stroke();\n  ctx.closePath();\n};\n\nconst drawUpperText = ({ ctx }) => {\n  const fontSize1 = 21;\n  const fontSize2 = 16;\n  const font1 = `normal 700 ${fontSize1}pt 'Montserrat', 'Noto Sans TC', 'Noto Sans', sans-serif`;\n  const font2 = `normal 700 ${fontSize2}pt 'Montserrat', 'Noto Sans TC', 'Noto Sans', sans-serif`;\n  const text1X = hPadding - 5;\n  const text1Y = vPadding + fontSize1 * 0.75;\n  const text2X = text1X;\n  const text2Y = text1Y + fontSize1 + 5;\n\n  ctx.font = font2;\n  const textWidth1 = ctx.measureText('GATHERING').width;\n  ctx.fillStyle = 'rgba(0, 0, 0, 0.6)';\n  ctx.fillRect(\n    text1X - 10,\n    text1Y - fontSize1 - 13,\n    textWidth1 + 20,\n    fontSize1 + fontSize2 + 40\n  );\n\n  ctx.textAlign = 'left';\n  ctx.fillStyle = '#fafafa';\n\n  ctx.font = font1;\n  ctx.fillText('NODE', text1X, text1Y);\n\n  ctx.font = font2;\n  ctx.fillText('GATHERING', text2X, text2Y);\n};\n\nconst drawLowerText = ({ ctx, name, date }) => {\n  const fontSize1 = 21;\n  const fontSize2 = 37;\n  const font1 = `normal 400 ${fontSize1}pt Montserrat, 'Noto Sans TC', 'Noto Sans', sans-serif`;\n  const font2 = `normal 400 ${fontSize2}pt Montserrat, 'Noto Sans TC', 'Noto Sans', sans-serif`;\n\n  const nameString = `- ${name} -`;\n  const dateString = moment(date).format('MM/DD');\n  ctx.font = font1;\n  const textWidth1 = ctx.measureText(nameString).width;\n  ctx.font = font2;\n  const textWidth2 = ctx.measureText(dateString).width;\n\n  const text2X = size - hPadding - 10;\n  const text1X = text2X;\n  const text2Y = size - vPadding - 20;\n  const text1Y = text2Y - fontSize2 - 20;\n\n  ctx.fillStyle = 'rgba(0, 0, 0, 0.5)';\n  const rectWidth = Math.max(textWidth1, textWidth2);\n  ctx.fillRect(\n    text1X - rectWidth - 12,\n    text1Y - fontSize1 - 19,\n    rectWidth + 20,\n    fontSize2 * 2 + 40\n  );\n\n  ctx.textAlign = 'right';\n  ctx.fillStyle = '#fafafa';\n\n  ctx.font = font1;\n  ctx.fillText(nameString, text1X, text1Y);\n\n  ctx.font = font2;\n  ctx.fillText(dateString, text2X, text2Y);\n};\n\nexport const run = ({ canvas, img, name, date, logo }) => {\n  const ctx = canvas.getContext('2d');\n  const hRatio = canvas.width / img.width;\n  const vRatio = canvas.height / img.height;\n  const ratio = Math.max(hRatio, vRatio);\n  const centerShift_x = (canvas.width - img.width * ratio) / 2;\n  const centerShift_y = (canvas.height - img.height * ratio) / 2;\n\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n  ctx.drawImage(\n    img,\n    0,\n    0,\n    img.width,\n    img.height,\n    centerShift_x,\n    centerShift_y,\n    img.width * ratio,\n    img.height * ratio\n  );\n\n  // ctx.drawImage(\n  //   logo,\n  //   hPadding - 20,\n  //   vPadding + 20,\n  //   size * logoRatio,\n  //   size * logoRatio\n  // );\n\n  drawFrame({ ctx, size });\n\n  drawUpperText({ ctx });\n\n  drawLowerText({ ctx, name, date });\n\n  const dataURL = canvas.toDataURL();\n\n  return dataURL;\n};\n","import React, { useState, useRef } from 'react';\nimport './Watermark.css';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { run } from './filters/filter-2';\n\nconst size = 1080;\n\nconst imageUpload = (e, { setRaw }) => {\n  e.preventDefault();\n\n  let reader = new FileReader();\n  let file = e.target.files[0];\n\n  reader.onloadend = () => {\n    setRaw(reader.result);\n  };\n\n  reader.readAsDataURL(file);\n};\n\nconst previewLoad = ({\n  canvasRef,\n  rawRef,\n  setPreview,\n  name,\n  date,\n  logoRef\n}) => {\n  const canvas = canvasRef.current;\n  const img = rawRef.current;\n  const logo = logoRef.current;\n\n  const dataUrl = run({\n    canvas,\n    img,\n    name,\n    date,\n    logo\n  });\n\n  setPreview(dataUrl);\n};\n\nconst Watermark = () => {\n  const canvasRef = useRef(null);\n  const rawRef = useRef(null);\n  const previewRef = useRef(null);\n  const uploadRef = useRef(null);\n  const logoRef = useRef(null);\n  const [raw, setRaw] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const [name, setName] = useState('');\n  const [date, setDate] = useState(null);\n\n  return (\n    <div className=\"Watermark\">\n      <TextField\n        id=\"standard-name\"\n        label=\"Gathering Name\"\n        className=\"input-width\"\n        margin=\"normal\"\n        value={name}\n        onChange={e => setName(e.target.value)}\n      />\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <KeyboardDatePicker\n          disableToolbar\n          variant=\"inline\"\n          format=\"MM/dd\"\n          margin=\"normal\"\n          label=\"Gathering Date\"\n          className=\"input-width\"\n          KeyboardButtonProps={{\n            'aria-label': 'change date'\n          }}\n          minDate={Date.now()}\n          value={date}\n          onChange={date => setDate(date)}\n        />\n      </MuiPickersUtilsProvider>\n      <div className=\"button-margin\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => uploadRef.current.click()}\n        >\n          Choose Photo\n        </Button>\n      </div>\n      <input\n        id=\"upload\"\n        ref={uploadRef}\n        type=\"file\"\n        onChange={e => imageUpload(e, { setRaw })}\n      />\n      <img\n        src={raw}\n        ref={rawRef}\n        alt=\"raw\"\n        onLoad={() =>\n          previewLoad({ canvasRef, rawRef, setPreview, name, date, logoRef })\n        }\n      />\n      <img src={require('./logo.png')} ref={logoRef} alt=\"logo\" />\n      <canvas ref={canvasRef} width={size} height={size} />\n      {preview && <img src={preview} ref={previewRef} alt=\"download\" />}\n      {preview && (\n        <div className=\"button-margin\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            href={preview.replace('image/png', 'image/octet-stream')}\n            download={'cover.jpg'}\n          >\n            Download\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Watermark;\n","import React from 'react';\nimport './App.css';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Watermark from './Watermark';\n\nfunction App() {\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\">Node Gathering Cover</Typography>\n        </Toolbar>\n      </AppBar>\n      <Container maxWidth=\"sm\">\n        <Watermark />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}